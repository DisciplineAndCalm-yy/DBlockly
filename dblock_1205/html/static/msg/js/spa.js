// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.spa');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "Añadir Comentario";
Blockly.Msg.AUTH = "Por favor, autorice esta aplicación para que su trabajo se salven y para que pueda ser compartida por usted.";
Blockly.Msg.CHANGE_VALUE_TITLE = "Cambiar valor:";
Blockly.Msg.CHAT = "Chatea con su colaborador escribiendo en esta caja!";
Blockly.Msg.CLEAN_UP = "Limpiar los Bloques";
Blockly.Msg.COLLAPSE_ALL = "Contraer Bloques";
Blockly.Msg.COLLAPSE_BLOCK = "Contraer Bloque";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "color 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "color 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";
Blockly.Msg.COLOUR_BLEND_RATIO = "escala";
Blockly.Msg.COLOUR_BLEND_TITLE = "mezcla";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Combina dos colores junto con una relación dada (0,0 - 1,0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://en.wikipedia.org/wiki/Color";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Elija un color de la paleta.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";
Blockly.Msg.COLOUR_RANDOM_TITLE = "color aleatorio";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Elegir un color aleatorio.";
Blockly.Msg.COLOUR_RGB_BLUE = "azul";
Blockly.Msg.COLOUR_RGB_GREEN = "verde";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";
Blockly.Msg.COLOUR_RGB_RED = "rojo";
Blockly.Msg.COLOUR_RGB_TITLE = "color con";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Crea un color con la cantidad especificada de rojo, verde y azul. Todos los valores deben estar entre 0 y 100.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "salir del bucle";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "continuar con la próxima iteración del bucle";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Romper el bucle que contiene.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Saltar el resto de este bucle, y continuar con la siguiente iteración.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Advertencia: Este bloque sólo se puede utilizar dentro de un bucle.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each for each block";
Blockly.Msg.CONTROLS_FOREACH_INPUT_INLIST = "en la lista";
Blockly.Msg.CONTROLS_FOREACH_INPUT_INLIST_TAIL = "";
Blockly.Msg.CONTROLS_FOREACH_INPUT_ITEM = "por cada item";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Para cada elemento de una lista, establezca la variable '% 1' para el elemento y, a continuación, hacer algunas instrucciones.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";
Blockly.Msg.CONTROLS_FOR_INPUT_FROM_TO = "from %1 to %2";
Blockly.Msg.CONTROLS_FOR_INPUT_FROM_TO_BY = "from %1 to %2 by %3";
Blockly.Msg.CONTROLS_FOR_INPUT_WITH = "count with";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Tomando la variable %1 los valores del número de inicio hasta el número final, contando con el intervalo especificado, ejecuta los bloques especificados.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Agregar una condición al bloque if.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Añadir una condicón final al bloque if.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Añadir, eliminar o cambiar el orden de las secciones para reconfigurar este bloque if.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "de lo contrario";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "en cambio, si";
Blockly.Msg.CONTROLS_IF_MSG_IF = "si";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Si un valor es verdadero, entonces ejecuta unas instrucciones.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Si un valor es verdadero, hace el primer bloque de instrucciones De lo contrario, haga lo segundo bloque de instrucciones.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Si el primer valor es verdadero, hacer el primer bloque de sentencias. De lo contrario, si el segundo valor es verdaderoe, hacer el segundo bloque de instrucciones.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Si el primer valor es verdadero, hacer el primer bloque de sentencias. De lo contrario, si el segundo valor es cierto, hacer el segundo bloque de instrucciones. Si ninguno de los valores son verdaderos, hacer el último bloque de instrucciones.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://en.wikipedia.org/wiki/For_loop";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "ejecutar";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "repetir %1 veces";
Blockly.Msg.CONTROLS_REPEAT_TITLE_REPEAT = "repetir";
Blockly.Msg.CONTROLS_REPEAT_TITLE_TIMES = "veces";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Ejcutar algunas operaciones varias veces.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "repetir hasta";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "repetir mientras";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Mientras que un valor es falso, repetir algunas operaciones.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Mientras que un valor es cierto, repetir algunas operaciones.";
Blockly.Msg.DELETE_BLOCK = "Borrar Bloque";
Blockly.Msg.DELETE_X_BLOCKS = "Borrar %1 Bloques";
Blockly.Msg.DISABLE_BLOCK = "Desactivar Bloque";
Blockly.Msg.DUPLICATE_BLOCK = "Duplicar";
Blockly.Msg.ENABLE_BLOCK = "Activar Bloque";
Blockly.Msg.EXPAND_ALL = "Expandir Bloques";
Blockly.Msg.EXPAND_BLOCK = "Expandir Bloque";
Blockly.Msg.EXTERNAL_INPUTS = "Entradas Externas";
Blockly.Msg.HELP = "Ayuda";
Blockly.Msg.INLINE_INPUTS = "Entradas en Linea";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "crear una lista vacía";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Devolver una lista, de longitud 0, no conteniendo datos";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "lista";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Añadir, quita, o rordenar secciones para cnfigurar la lista bloque.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "crear una lista con";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Añadir un elemento a la lista.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Crear una lista con cualquier número de datos.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "primero";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# desde el final";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";
Blockly.Msg.LISTS_GET_INDEX_GET = "obtener";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "obtener y eliminar";
Blockly.Msg.LISTS_GET_INDEX_LAST = "último";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "aleatorio";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "eliminar";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Devuelve el primer elemento d ela lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Devuelve el item cuya osicion se especifica en una lista en la que. #1 es el ultimo elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Devuelve el elemento en la posición especificada en la lista. #1 es el primer elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Devuelve el último elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Devuelve un elemento aleatorio en una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Elimina y devuelve el primer elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Elimina y devuelve el elemento en la posición especificada en la lista. #1 es el último elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Elimina y devuelve el elemento en la posición especificada en la lista. #1 es el primer elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Elimina y devuelve el último elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Elimina y devuelve un elemento aleatorio en una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Elimina el primer elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Elimina el elemento en la posición especificada en la lista. #1 es el último elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Elimina el elemento en la posición especificada en la lista. #1 es el primer elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Elimina el último elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Elimina un elemento aleatorio en una lista.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "hasta # del final";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "hasta #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "hasta el último";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "obtener sublista desde el primero";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "obtener sublista desde # del final";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "obtener sublista desde #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Crea una copia de la parte especificada de una lista.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "encontrar la primera aparición del elemento";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "encontrar la última aparición del elemento";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Devuelve el índice de la primera/última aparición del elemento en la lista. Devuelve 0 si el texto no se encuentra.";
Blockly.Msg.LISTS_INLIST = "en la lista";
Blockly.Msg.LISTS_IS_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_IS_EMPTY_TITLE = "%1 está vacía";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "longitud de";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Devuelve la longitud de una lista.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "crear lista con el elemento %1 repetido %2 veces";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Crea una lista que consta de un valor dado repetido el número de veces especificado.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "como";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "insertar en";
Blockly.Msg.LISTS_SET_INDEX_SET = "establecer";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Inserta el elemento al inicio de una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Inserta el elemento en la posición especificada en la lista. #1 es el último elemento.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Inserta el elemento en la posición especificada en la lista. #1 es el primer elemento.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Añade el elemento al final de una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Inserta el elemento aleatoriamente en una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Establece el primer elemento de una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Establece el elemento en la posición especificada en una lista. #1 es el último elemento.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Establece el elemento en la posición especificada en una lista. #1 es el primer elemento.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Establece el último elemento de una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Establece un elemento aleatorio en una lista.";
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "hacer lista a partir de texto";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "hacer texto a partir de lista";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Unir una lista de textos en un solo texto, separado por un delimitador.";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Dividir el texto en una lista de textos, separando en cada delimitador.";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "con delimitador";
Blockly.Msg.LISTS_TOOLTIP = "Devuelve verdadero si la lista está vacía.";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "falso";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Devuelve verdadero o falso.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "verdadero";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://es.wikipedia.org/wiki/Desigualdad_matemática";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Devuelve verdadero si ambas entradas son iguales.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Devuelve verdadero si la primera entrada es mayor que la segunda entrada.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Devuelve verdadero si la primera entrada es mayor o igual a la segunda entrada.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Devuelve verdadero si la primera entrada es menor que la segunda entrada.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Devuelve verdadero si la primera entrada es menor que o igual a la segunda entrada.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Devuelve verdadero si ambas entradas son distintas.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "no";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Devuelve verdadero si la entrada es falsa. Devuelve falso si la entrada es verdadera.";
Blockly.Msg.LOGIC_NULL = "nulo";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Devuelve nulo.";
Blockly.Msg.LOGIC_OPERATION_AND = "y";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "o";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Devuelve verdadero si ambas entradas son verdaderas.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Devuelve verdadero si al menos una de las entradas es verdadera.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "prueba";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "si es falso";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "si es verdadero";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Comprueba la condición en \"prueba\". Si la condición es verdadera, devuelve el valor \"si es verdadero\"; de lo contrario, devuelve el valor \"si es falso\".";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://es.wikipedia.org/wiki/Aritmética";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Devuelve la suma de ambos números.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Devuelve el cociente de ambos números.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Devuelve la diferencia de ambos números.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Devuelve el producto de ambos números.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Devuelve el primer número elevado a la potencia del segundo.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_QUYU = "";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_INPUT_BY = "por";
Blockly.Msg.MATH_CHANGE_TITLE_CHANGE = "cambiar";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Añadir un número a la variable «%1».";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://es.wikipedia.org/wiki/Anexo:Constantes_matemáticas";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Devuelve una de las constantes comunes: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…) o ∞ (infinito).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "limitar %1 entre %2 y %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Limitar un número entre los límites especificados (inclusive).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";  // untranslated
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "es divisible por";
Blockly.Msg.MATH_IS_EVEN = "es par";
Blockly.Msg.MATH_IS_NEGATIVE = "es negativo";
Blockly.Msg.MATH_IS_ODD = "es impar";
Blockly.Msg.MATH_IS_POSITIVE = "es positivo";
Blockly.Msg.MATH_IS_PRIME = "es primo";
Blockly.Msg.MATH_IS_TOOLTIP = "Comprueba si un número es par, impar, primo, entero, positivo, negativo, o si es divisible por un número determinado. Devuelve verdadero o falso.";
Blockly.Msg.MATH_IS_WHOLE = "es entero";
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "resto de %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Devuelve el resto al dividir los dos números.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
Blockly.Msg.MATH_NUMBER_HELPURL = "https://es.wikipedia.org/wiki/Número";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Un número.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "promedio de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "máximo de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "mediana de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "mínimo de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "modas de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "elemento aleatorio de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "desviación estándar de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "suma de la lista";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Devuelve el promedio (media aritmética) de los valores numéricos en la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Devuelve el número más grande en la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Devuelve la mediana en la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Devuelve el número más pequeño en la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Devuelve una lista de los elementos más comunes en la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Devuelve un elemento aleatorio de la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Devuelve la desviación estándar de la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Devuelve la suma de todos los números en la lista.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "aleatorio decimal";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Devuelve un decimal aleatorio entre 0.0 (incluida) y 1.0 (exclusivo).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "entero aleatorio entre %1 y %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Devuelve un entero aleatorio entre los dos límites especificados, incluidos.";
Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "redondeo";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "redondeo por lo alto";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "redondeo por lo bajo";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Redondear un número hacia arriba o hacia abajo.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://en.wikipedia.org/wiki/Square_root";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "absoluto";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "raíz cuadrada";
Blockly.Msg.MATH_ABS='abs';
Blockly.Msg.MATH_SQ='sq';
Blockly.Msg.MATH_SQRT='sqrt';
Blockly.Msg.MATH_LOG='log';
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Devuelve el valor absoluto de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Devuelve e a la potencia de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Devuelve el logaritmo natural de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Devuelve el logaritmo base 10 de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Devuelve la negación de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Devuelve 10 a la potencia de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Devuelve la raíz cuadrada de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_SQ = "Devuelve el cuadrado de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_TOINT = "Devuelve la parte entera de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROUND = "Devuelve la parte entera de un número utilizando around.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_CEIL = "Devuelve la parte entera de un número utilizando ceil.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_FLOOR = "Devuelve la parte entera de un número utilizando floor.";

Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";
Blockly.Msg.MATH_QUYU_SYMBOL="%";
Blockly.Msg.MATH_TRIG_ACOS = "acos";
Blockly.Msg.MATH_TRIG_ASIN = "asin";
Blockly.Msg.MATH_TRIG_ATAN = "atan";
Blockly.Msg.MATH_TRIG_COS = "cos";
Blockly.Msg.MATH_TRIG_HELPURL = "https://en.wikipedia.org/wiki/Trigonometric_functions";
Blockly.Msg.MATH_TRIG_SIN = "sin";
Blockly.Msg.MATH_TRIG_TAN = "tan";
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Devuelve el arcocoseno de un número.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Devuelve el arcoseno de un número.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Devuelve el arcotangente de un número.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Devuelve el coseno de un grado (no radián).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Devuelve el seno de un grado (no radián).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Devuelve la tangente de un grado (no radián).";
Blockly.Msg.ME = "Yo";
Blockly.Msg.NEW_VARIABLE = "Nueva variable..";
Blockly.Msg.NEW_VARIABLE_TITLE = "Nombre de nueva variable:";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "permitir declaraciones";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "con:";
Blockly.Msg.PROCEDURES_CALLNORETURN_CALL = "hacer";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Run the user-defined function '%1'.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Run the user-defined function '%1' and use its output.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "con:";
Blockly.Msg.PROCEDURES_CREATE_DO = "Crear '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "hacer";
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "proceso";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Crea una función sin salida.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "devuelve";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Crea una función con una salida.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Advertencia: Esta función tiene parámetros duplicados.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Destacar definición de la función";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Si un valor es verdadero, entonces devuelve un segundo valor.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Advertencia: Este bloque solo puede ser utilizado dentro de la definición de una función.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "nombre de entrada:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Añadir una entrada a la función.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "entradas";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Añadir, eliminar o reordenar entradas para esta función.";
Blockly.Msg.REMOVE_COMMENT = "Eliminar comentario";
Blockly.Msg.RENAME_VARIABLE = "Renombrar la variable…";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Renombrar todas las variables «%1» a:";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "añadir texto";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "a";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Añadir texto a la variable '%1'.";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "a minúsculas";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "a Mayúsculas Cada Palabra";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "a MAYÚSCULAS";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Devuelve una copia del texto en un caso diferente.";
Blockly.Msg.TEXT_CHARAT_FIRST = "obtener la primera letra";
Blockly.Msg.TEXT_CHARAT_FROM_END = "obtener la letra # del final";
Blockly.Msg.TEXT_CHARAT_FROM_START = "obtener la letra #";
Blockly.Msg.TEXT_CHARAT = "char at";  // untranslated
Blockly.Msg.TEXT_CHARAT2 = "";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "en el texto";
Blockly.Msg.TEXT_CHARAT_LAST = "obtener la última letra";
Blockly.Msg.TEXT_CHARAT_RANDOM = "obtener letra aleatoria";
Blockly.Msg.TEXT_CHARAT_TAIL = "";
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Devuelve la letra en la posición especificada.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Agregar un elemento al texto.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "unir";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Agregar, eliminar o reordenar las secciones para reconfigurar este bloque de texto.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "hasta la letra # del final";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "hasta la letra #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "hasta la última letra";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "en el texto";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "obtener subcadena desde la primera letra";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "obtener subcadena desde la letra # del final";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "obtener subcadena desde la letra #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Devuelve una porción determinada del texto.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "en el texto";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "encontrar la primera aparición del texto";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "encontrar la última aparición del texto";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Devuelve el índice de la primera/última aparición del primer texto en el segundo texto. Devuelve 0 si el texto no se encuentra.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 está vacío";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Devuelve verdadero si el texto proporcionado está vacío.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "crear texto con";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Crear un fragmento de texto al unir cualquier número de elementos.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "longitud de %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Devuelve el número de letras (incluyendo espacios) en el texto proporcionado.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "imprimir %1";
Blockly.Msg.TEXT_WRITE_TOOLTIP = "Escribir el texto, número u otro valor especificado.";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Imprimir el texto, número u otro valor especificado.";
Blockly.Msg.TEXT_PRINT_HEX_TOOLTIP = "";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Solicitar al usuario un número.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Solicitar al usuario un texto.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "solicitar número con el mensaje";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "solicitar texto con el mensaje";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://es.wikipedia.org/wiki/Cadena_de_caracteres";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Una letra, palabra o línea de texto.";
Blockly.Msg.TEXT_CHAR_TOOLTIP = "A character.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "quitar espacios de ambos lados de";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "quitar espacios iniciales de";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "quitar espacios finales de";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Devuelve una copia del texto sin los espacios de uno o ambos extremos.";
Blockly.Msg.TODAY = "Today";  // untranslated
Blockly.Msg.VARIABLES_DEFAULT_NAME = "elemento";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Crear 'establecer %1'";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg.VARIABLES_GET_TAIL = "";  // untranslated
Blockly.Msg.VARIABLES_GET_TITLE = "";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Devuelve el valor de esta variable.";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Crear 'obtener %1'";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TAIL = "a";
Blockly.Msg.VARIABLES_SET_TITLE = "establecer";
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Establece esta variable para que sea igual a la entrada.";
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.VARIABLES_SET_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.VARIABLES_GET_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_CALLRETURN_CALL = Blockly.Msg.PROCEDURES_CALLNORETURN_CALL;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
//luokailiang
Blockly.HTE_PINMODE = 'pinMode'; //untranslated
Blockly.HTE_PINMODEIN = 'INPUT'; //untranslated
Blockly.HTE_PINMODEOUT = 'OUTPUT'; //untranslated
Blockly.HTE_PINMODEPULLUP = 'INPUT_PULLUP'; //untranslated
Blockly.HTE_DECLARE='Declarar';
Blockly.HTE_AS='como';
Blockly.HTE_VALUE='valor';
Blockly.HTE_VALUE2='valor';
Blockly.HTE_MAP='Map ';
Blockly.HTE_MAP_FROM="desde [";
Blockly.HTE_MAP_TO="] hasta [";
Blockly.HTE_MILLIS='milisg';
Blockly.HTE_DELAY='Retardo';
Blockly.HTE_ATTACHINTERRUPT_PIN='conectarInterrupción pin#';
Blockly.HTE_DETACHINTERRUPT_PIN = 'desconctarInterrupción pin#';
Blockly.HTE_ATTACHPININTERRUPT_PIN = 'conectarPinInterrupción pin#';
Blockly.HTE_DETACHPININTERRUPT_PIN = 'desconctarPinInterrupción pin#';
Blockly.HTE_MODE='modo';
Blockly.HTE_DO='do';
Blockly.HTE_BUILDIN_LED='LED conectado ';
Blockly.HTE_STAT='Stat';
Blockly.HTE_DIGITALWRITE_PIN='EscribeDigital PIN#';
Blockly.HTE_DIGITALREAD_PIN='LeeDigital PIN#';
Blockly.HTE_ANALOGWRITE_PIN='EscribeAnalógico PIN#';
Blockly.HTE_ANALOGREAD_PIN='LeeAnalógico PIN#';
Blockly.HTE_SERIAL_WRITE = 'escribir';
Blockly.HTE_SERIAL_PRINT = 'imprime';
Blockly.HTE_SERIAL_PRINTLN='imprimeLinea';
Blockly.HTE_SERIAL_PRINT_HEX='imprimeLinea(hex)';
Blockly.HTE_SERIAL_FLUSH='flush';
Blockly.HTE_STEP='paso';
Blockly.HTE_TONE_PIN='Tono PIN#';
Blockly.HTE_FREQUENCY='frecuencia';
Blockly.HTE_DURATION='duración';
Blockly.HTE_NOTONE_PIN='apagaTono PIN#';
Blockly.HTE_BLOCKGROUP_CATEGORY='BlockGroup';
Blockly.HTE_IR_RECEIVE='IR_recibe PIN#';
Blockly.HTE_IR_RECEIVE_ENABLE='enableIRIn PIN#';
Blockly.HTE_IR_SEND_NEC1='IR_envia'
Blockly.HTE_IR_SEND_NEC2=' PIN#'
Blockly.HTE_IR_RECEIVE_RAW='IR_recibe(Imprime RAW Dato) PIN#';
Blockly.HTE_IR_SEND_RAW='IR_envia(RAW) PIN#'
Blockly.LANG_MATH_TO_INT = 'aInt';
Blockly.LANG_MATH_TO_ROUND = 'Round';
Blockly.LANG_MATH_TO_CEIL = 'Ceil';
Blockly.LANG_MATH_TO_FLOOR = 'Floor';
Blockly.HTE_SERVO='Servo';
Blockly.HTE_PIN='PIN#';
Blockly.HTE_DEGREE_0_180='Grados (0~180)';
Blockly.HTE_READ_DEGREES='Leer Grados';
Blockly.HTE_HIGH='ALTO';
Blockly.HTE_LOW='BAJO';
Blockly.HTE_ON='ON';
Blockly.HTE_OFF='OFF';
Blockly.HTE_RISING='SUBIR';
Blockly.HTE_FALLING='BAJAR';
Blockly.HTE_CHANGE='CAMBIO';
Blockly.HTE_I2C_MASTER_WRITE="I2C_Escribe Elemento";
Blockly.HTE_I2C_MASTER_READ="I2C_Lee Elemento";
Blockly.HTE_I2C_MASTER_READ2="I2C_Leer";
Blockly.HTE_I2C_VALUE="valor"
Blockly.HTE_I2C_BYTES="bytes";
Blockly.HTE_I2C_AVAILABLE='I2C isAvailable?';
Blockly.HTE_I2C_SLAVE_ONRECEIVE='I2C Slave onReceive PIN#';
Blockly.LANG_CONTROLS_FOR_INPUT_WITH = 'contar con';
Blockly.LANG_CONTROLS_FOR_INPUT_VAR = 'x';
Blockly.LANG_CONTROLS_FOR_INPUT_FROM = 'desde';
Blockly.LANG_CONTROLS_FOR_INPUT_TO = 'hasta';
Blockly.LANG_CONTROLS_FOR_INPUT_DO = 'ejecutar';
Blockly.LANG_CONTROLS_WHILEUNTIL_TITLE_REPEAT = 'repetir';
Blockly.LANG_CONTROLS_WHILEUNTIL_INPUT_DO = 'ejecutar';
Blockly.LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE = 'mientras';
Blockly.LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = 'hasta que';
Blockly.LANG_CONTROLS_FLOW_STATEMENTS_INPUT_OFLOOP = 'de bucle';
Blockly.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = 'salir';
Blockly.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = 'continuar próxima iteracción';
Blockly.LANG_CONTROLS_FLOW_STATEMENTS_WARNING = 'Cuidado:\n' + 'Este bloque solo puede\n' + 'usado como un bucle.';
Blockly.LANG_MATH_LONG = 'long';
Blockly.LANG_MATH_INT = 'int';
Blockly.LANG_MATH_FLOAT = 'float';
Blockly.LANG_MATH_BOOLEAN = 'boolean';
Blockly.LANG_MATH_BYTE = 'byte';
Blockly.LANG_MATH_CHAR = 'char';
Blockly.LANG_MATH_STRING = 'string';
Blockly.LANG_LISTS_GET_INDEX1 = 'get item at'; //untranslated
Blockly.LANG_LISTS_GET_INDEX2 = '';
Blockly.LANG_LISTS_GET_INDEX_TOOLTIP = 'Devuelve el valor en la posición especificada en una lista.';
Blockly.LANG_LISTS_SET_INDEX1 = 'set item at'; //untranslated
Blockly.LANG_LISTS_SET_INDEX2 = 'to'; //untranslated
Blockly.LANG_LISTS_SET_INDEX_TOOLTIP = 'Establece el valor en la posición especificada en una lista.';
Blockly.LANG_MATH_CONSTRAIN_INPUT_CONSTRAIN = 'Limitar';
Blockly.LANG_MATH_CONSTRAIN_INPUT_LOW = 'entre (bajo)';
Blockly.LANG_MATH_CONSTRAIN_INPUT_HIGH = 'y (alto)';
Blockly.LANG_MATH_RANDOM_SEED = 'semilla aleatoria';
Blockly.LANG_MATH_RANDOM_INT_INPUT_FROM = 'entero aleatorio de';
Blockly.LANG_MATH_RANDOM_INT_INPUT_TO = 'a';
Blockly.HTE_DF_LED='LED';
Blockly.HTE_DF_BUZZER='Zumbador';
Blockly.HTE_DF_BTN='Botón';
Blockly.HTE_DF_VIBRATION='Vibración';
Blockly.HTE_DF_TILT='Tilt';
Blockly.HTE_DF_TOUCH='Pulsador';
Blockly.HTE_DF_MAGNETIC='Magnético';
Blockly.HTE_DF_PYROELECTRIC_INFRARED='Piroeléctrico infrarrojo';
Blockly.HTE_MB_PYROELECTRIC_INFRARED='Sensor Mov. PIR';
Blockly.HTE_DF_JOYSTICK_D='Boton Joystick';
Blockly.HTE_DF_JOYSTICK_A='Joystick';
Blockly.HTE_JOYSTICK='Joystick';
Blockly.HTE_DF_POTENTIOMETER='Potenciómetro';
Blockly.HTE_POTENTIOMETER='Potenciómetro';
Blockly.HTE_DF_ROTATION='Rotación';
Blockly.HTE_DF_VOLTAGE='Voltage';
Blockly.HTE_DF_PIEZO_DISK_VIRBRATION='Disco vibracion piezoelectrico';
Blockly.HTE_DF_SOUND='Sonido';
Blockly.HTE_SOUND='Sonido';
Blockly.HTE_DF_RELAY='Relé';
Blockly.HTE_DF_LIGHT='Luz';
Blockly.HTE_DF_GRAYSCALE='EscalaGrises';
Blockly.HTE_DF_FLAME='Llama';
Blockly.HTE_DF_TEMPERATURE='Temperatura';
Blockly.HTE_TEMPERATURE='Temperatura(℃)';
Blockly.HTE_DF_ACCELEROMETER='Acelerómetro';
Blockly.HTE_DF_MOISTURE='Humedad';
Blockly.HTE_DF_WATER='Agua';
Blockly.HTE_DF_CO='Monóxido Carbono';
Blockly.HTE_DF_SHARP_GP2Y0A21='Sharp GP2Y0A21';
Blockly.HTE_MAKELISTFROM='hacer una lista del texto';
Blockly.HTE_SPLITBYDOU='';
Blockly.HTE_SETUP='configurar';
Blockly.HTE_WARNING_INTERRUPT='Este pin no puede ser interrumpido!';
Blockly.HTE_CHAOSHENGBO='Escala Ultrasonido(cm) ';
Blockly.HTE_MB_CHAOSHENGBO='Ultrasonido oscila';
Blockly.HTE_IR_RECEIVE_YES='Recibe';
Blockly.HTE_IR_RECEIVE_NO='NoRecibe';
Blockly.LANG_VARIABLES_SET_TITLE='';
Blockly.HTE_TEXT_JOIN='unir';
Blockly.HTE_SERIAL_AVAILABLE = 'disponible?';
Blockly.HTE_SERIAL_EVENT = 'serialEvent';
Blockly.HTE_SERIAL_READSTR='readString';
Blockly.HTE_SERIAL_READSTR_UNTIL='readStringUntil';
Blockly.HTE_SERIAL_READ='';
Blockly.HTE_IR_RECIEVE_TOOLTIP='Hacer algo al recibir señales infrarrojas.';
Blockly.HTE_IR_SEND_NEC_TOOLTIP='Envía señales de infrarrojos del tipo especificado';
Blockly.HTE_IR_RECIEVE_RAW_TOOLTIP='Imprimir la señal de infrarrojos de tipo RAW cuando lo recibe.';
Blockly.HTE_IR_SEND_RAW_TOOLTIP='Envía señales RAW infrarrojos (conjunto de número de pin, lista, la duración de la lista y la frecuencia IR)';
Blockly.HTE_LIST_NAME='lista';
Blockly.HTE_LIST_LENGTH='LongitudLista';
Blockly.HTE_TO_INT='aEntero';
Blockly.HTE_TO_FLOAT='aDecimal';
Blockly.HTE_DATA="dato";
Blockly.HTE_BITS="bits";
Blockly.HTE_MB_LIGHT_GRAYSCALE='Sensor luz Escala Grises';
Blockly.HTE_MB_LIGHT_GRAYSCALE_LED=' configura LED';
Blockly.HTE_MB_LIGHT_MOTOR='Configura Motor';
Blockly.HTE_MB_LIGHT_MOTOR_SPEED=' Velocidad(-255~255)';
Blockly.HTE_DELAY_MS='ms';
Blockly.HTE_DELAY_US = 'μs';
Blockly.HTE_PIN = 'PIN#';
Blockly.HTE_GETTEMPERATUE = 'leeTemperatura';
Blockly.HTE_GETHUMIDITY = 'leeHumedad';
Blockly.HTE_DHT11='DHT11 PIN#';
Blockly.HTE_DHT11_T='leeTemperatura';
Blockly.HTE_DHT11_H='leeHumedad';
Blockly.HTE_LCD_RGB_BACKLIGHT='LCD RGB Backlight';
Blockly.HTE_DF_LCD='LCD';
Blockly.HTE_LCD_PRINT1='imprimir linea1';
Blockly.HTE_LCD_PRINT2='imprimir linea2';
Blockly.HTE_LCD_PRINT3='imprimir linea3';
Blockly.HTE_LCD_PRINT4='imprimir linea4';
Blockly.HTE_LCD_ROW='fila';
Blockly.HTE_LCD_COLUMN='columna';
Blockly.HTE_LCD_PRINT='imprime';
Blockly.HTE_LCD_SETCOLOR='configuraColor';
Blockly.HTE_LCD_STAT_ON='On';
Blockly.HTE_LCD_STAT_OFF='Off';
Blockly.HTE_LCD_STAT_CURSOR='Cursor';
Blockly.HTE_LCD_STAT_NOCURSOR='noCursor';
Blockly.HTE_LCD_STAT_BLINK='Blink';
Blockly.HTE_LCD_STAT_NOBLINK='noBlink';
Blockly.HTE_LCD_STAT_CLEAR = 'Borrar';
Blockly.HTE_LCD_NOBACKLIGHT = 'NoBackLight';
Blockly.HTE_LCD_BACKLIGHT = 'BackLight';
Blockly.HTE_7S_DISPLAY='Display 7 segmentos';
Blockly.HTE_NUMBER='número';
Blockly.HTE_BLUETOOTH='Bluetooth';
Blockly.HTE_BLUETOOTH_READ_STR='leerString';
Blockly.HTE_AVAILABLE='disponible?';
Blockly.HTE_DATAPIN='datoPin#';
Blockly.HTE_CLOCKPIN='clockPin#';
Blockly.HTE_BITORDER='bitOrder';
Blockly.HTE_MSBFIRST='MSBFIRST';
Blockly.HTE_LSBFIRST='LSBFIRST';
Blockly.HTE_TOSTRING = 'aString';
Blockly.HTE_TOCHAR = 'aChar';
Blockly.HTE_TOASCII = 'aAscii';
Blockly.HTE_ROMEO_MOTOR='Romeo motor';
Blockly.HTE_ROMEO_MOTOR_SPEED='velocidad';
Blockly.HTE_STOP='stop';
Blockly.HTE_PULSEIN='pulsoIn(μs) PIN#';
Blockly.HTE_PULSEIN_STAT='estado';
Blockly.HTE_PULSEIN_TIMEOUT='tiempo_final(μs)';
Blockly.HTE_SERIAL_READ_INT='detectaInt';
Blockly.HTE_SERIAL_READ_FLOAT='detectaFloat';
Blockly.HTE_MAX='max';
Blockly.HTE_MIN='min';
Blockly.HTE_WRITE_SD_FILE='Escribe fichero en SD';
Blockly.HTE_SD_DATA='Dato';
Blockly.HTE_SD_NEWLINE='NuevaLinea';
Blockly.HTE_EEPROM_WRITE_LONG='Escribir(long) EEPROM dirección';
Blockly.HTE_EEPROM_READ_LONG='Leer(long) EEPROM dirección';
Blockly.HTE_EEPROM_WRITE_BYTE='Escribir(byte) EEPROM dirección';
Blockly.HTE_EEPROM_READ_BYTE='Leer(byte) EEPROM dirección';
Blockly.HTE_SENSE_MOTOR='Configurar Velocidad Motor(-255~255)';
Blockly.HTE_SENSE_MOTOR_STOP='Stop Motor';
Blockly.HTE_SENSE_SERVO='Configurar Ángulo Servo';
Blockly.HTE_SENSE_RGBLED='Configurar LED RGB\'s Color ';
Blockly.HTE_TRAFFIC_LED='Configurar LED tráfico';
Blockly.HTE_EAST='ESTE';
Blockly.HTE_SOUTH='SUR';
Blockly.HTE_WEST='OESTE';
Blockly.HTE_NORTH='NORTE';
Blockly.HTE_SENSE_BUZZER='Configurar Zumbador';
Blockly.HTE_SENSE_ULTRASONIC='Valor Ultrasonido';
Blockly.HTE_SENSE_PYROELECTRIC_INFRARED='PIR Movimiento?';
Blockly.HTE_BUTTON='Botón';
Blockly.HTE_UP='ARRIBA';
Blockly.HTE_DOWN='ABAJO';
Blockly.HTE_LEFT='IZQUIERDA';
Blockly.HTE_RIGHT='DERECHA';
Blockly.HTE_MID='MEDIO';
Blockly.HTE_IS_PRESSED='está presionado?';
Blockly.HTE_SENSE_SLIDING='Valor Potenciómetro deslizante';
Blockly.HTE_SENSE_TEMPERATURE='Valor Temperatura';
Blockly.HTE_SENSE_HUMIDITY='Valor Humedad';
Blockly.HTE_SENSE_SOUND='Valor Sonido';
Blockly.HTE_SENSE_LIGHT='Valor Luz';
Blockly.HTE_SENSE_WEIGHT='Valor de peso';
Blockly.HTE_SENSE_IR='IR Recibido:';
Blockly.HTE_SENSE_DIGITAL_DISPLAY='Configura LED Display Digital(0~99)';
Blockly.HTE_SENSE_DIGITAL_DISPLAY_CLOSE='Cierra LED Display Digital';
Blockly.HTE_SENSE_LED_MATRIX='Configura Matriz LED(0~9)';
Blockly.HTE_SENSE_LED_MATRIX_CLOSE='Cierra matriz LED';
Blockly.LANG_INOUT_DIGITAL_WRITE_TOOLTIP='Escribe un valor digital en el pin especificado';
Blockly.HTE_FORWARD='ir adelante';
Blockly.HTE_BACKWARD='ir atrás';
Blockly.HTE_TURNLEFT='giro izquierda';
Blockly.HTE_TURNRIGHT='giro derecha';
Blockly.HTE_MBOT_SPEED='a la velocidad(-255~255)';
Blockly.HTE_RUNTIME='Tiempo sistema ejecución';
Blockly.HTE_LED_ON_BOARD='led en placa';
Blockly.HTE_ALL='todo';
Blockly.HTE_SET_LED='Set LED';
Blockly.HTE_MBOT_TONE='Emite Tono';
Blockly.HTE_MBOT_NOTONE='Apaga Tono';
Blockly.HTE_SHOW_FACE='Muestra cara';
Blockly.HTE_SHOW_FACE_TEXT='caracteres:';
Blockly.HTE_SHOW_FACE_TIME='tiempo';
Blockly.HTE_MBOT_SET_DISPLAY='Configura Display 7 Segmentos';
Blockly.HTE_MBOT_SET_LIGHT='Configura Sensor de Luz';
Blockly.HTE_MBOT_SET_LIGHT_LED='led como';
Blockly.HTE_MBOT_SET_CAMERA='Establecer obturador de la cámara';
Blockly.HTE_MBOT_SET_CAMERA_STAT='como';
Blockly.HTE_MBOT_SET_CAMERA_PRESS='Presione';
Blockly.HTE_MBOT_SET_CAMERA_RELEASE='Activación';
Blockly.HTE_MBOT_SET_CAMERA_FOCUS_ON='Enfoque On';
Blockly.HTE_MBOT_SET_CAMERA_FOCUS_OFF='Enfoque Off';
Blockly.HTE_MBOT_LIGHT_SENSOR='Sensor Luz';
Blockly.HTE_LIGHT_SENSOR_ON_BOARD='sensor luz en tarjeta';
Blockly.HTE_MBOT_BUTTON='Botón';
Blockly.HTE_MBOT_BUTTON_PRESSED='presionado';
Blockly.HTE_MBOT_BUTTON_RELEASED='no presionado';
Blockly.HTE_MBOT_LINE_FOLLOWER='Seguidor Linea';
Blockly.HTE_MBOT_JOYSTICK='Joystick';
Blockly.HTE_MBOT_JOYSTICK_X='Eje-X';
Blockly.HTE_MBOT_JOYSTICK_Y='Eje-Y';
Blockly.HTE_MBOT_POTENTIOMETER='Potenciómetro';
Blockly.HTE_MBOT_SOUND_SENSOR='Sensor Sonido';
Blockly.HTE_MBOT_LIMIT_SWITCH='Interruptor Final de carrera';
Blockly.HTE_MBOT_TEMPERATURE='Temperatura';
Blockly.HTE_MBOT_PIR_MOTION_SENSOR='Sensor Movimiento PIR';
Blockly.HTE_MBOT_IR_REMOTE='IR remoto';
Blockly.HTE_MBOT_IR_REMOTE_PRESSED='presionado';
Blockly.HTE_SETTING='configurando';
Blockly.HTE_SEND_MBOT_MESSAGE='Enviando mensaje a mBot\'s ';
Blockly.HTE_MBOT_MESSAGE_RECEIVED='Mensaje recibido de mBot\'s';
Blockly.HTE_LABPLUS_ROBOT_MOVEMENT='Movimiento Robot';
Blockly.HTE_LABPLUS_ROBOT_MOVEMENT_GO_FORWARD='avanzar';
Blockly.HTE_LABPLUS_ROBOT_MOVEMENT_STOP='parar';
Blockly.HTE_LABPLUS_ROBOT_MOVEMENT_GO_BACK='retroceder';
Blockly.HTE_LABPLUS_ROBOT='Robot';
Blockly.HTE_LABPLUS_ROBOT_TURN_LEFT='girar izquierda';
Blockly.HTE_LABPLUS_ROBOT_TURN_RIGHT='girar derecha';
Blockly.HTE_LABPLUS_ROBOT_DISPLAY='Establece matriz leds en';
Blockly.HTE_LABPLUS_ROBOT_DISPLAY_SMILE='sonreir';
Blockly.HTE_LABPLUS_ROBOT_DISPLAY_NOSMILE='triste';
Blockly.HTE_LABPLUS_ROBOT_DISPLAY_CLOSE_EYE='cerrar los ojos';
Blockly.HTE_LABPLUS_ROBOT_DISPLAY_LEFT='flecha izquierda';
Blockly.HTE_LABPLUS_ROBOT_DISPLAY_RIGHT='flecha derecha';
Blockly.HTE_LABPLUS_ROBOT_DISPLAY_TIAOWEN='raya';
Blockly.HTE_LABPLUS_ROBOT_DISPLAY_ZEBRA='zebra';
Blockly.HTE_LABPLUS_ROBOT_DISPLAY_NOTHING='nada';
Blockly.HTE_LABPLUS_ROBOT_LED_TOP='Configura Led en la parte superior';
Blockly.HTE_LABPLUS_ROBOT_LED_SIDE='Establece color en los leds\' laterales';
Blockly.HTE_LCD_ADDRESS="dirección";
var MSG = {
  catInOut: "Entrada/Salida",
  catControl: "Control",
  catMath: "Matemáticas",
  catText: "Texto",
  catLists: "Listas",
  catLogic: "Lógica",
  catSerialPort:"PuertoSerial",
  catGroup: "Comunicación",
  catStorage:"Almacenamiento",
  catSensor: "Sensor",
  catActuator: "Actuador",
  catMonitor:"Monitor",
  catVar: "Variables",
  catFun: "Funciones",
  catEthernet:"Ethernet",
  catEthernet_init:"Init",
  catEthernet_clinet:"Client",
  catSense: "Labplus(Box)",
  catSense2: "Labplus(Robot)",
  catLuxe:"LuxeRobot",
  tab_blocks: "Bloques",
  tab_arduino: "Código",
  copyright:"",
  viewNormal:"Normal",
  viewAdvanced:"Advanced",
  catGame:"Game",
  catSystem:"System"
};
Blockly.HTE_TOOLTIP_INOUT_HIGHLOW='Devuelve alta o baja tensión.';
Blockly.HTE_TOOLTIP_INOUT_DIGITAL_READ='Devuelve un valor digital de un Pin específico';
Blockly.HTE_TOOLTIP_INOUT_ANALOG_WRITE='Escribe un valor analógico entre 0 y 255 en un Pin específico';
Blockly.HTE_TOOLTIP_INOUT_ANALOG_READ='Devuelve un valor entre 0 y 1023 de un Pin específico';
Blockly.HTE_TOOLTIP_INOUT_ATTACHINTERRUPT='Asocia la interrupción a un Pin específico';
Blockly.HTE_TOOLTIP_INOUT_DETACHINTERRUPT='Quita la interrupción de un Pin específico';
Blockly.HTE_TOOLTIP_CONTROL_SETUP='Inizialización(ejecutar una sola vez)';
Blockly.HTE_TOOLTIP_CONTROL_DELAY='Retarda un tiempo específico';
Blockly.HTE_TOOLTIP_CONTROL_MILLIS='Devuelve el sistema de tiempo de ejecución';
Blockly.HTE_TOOLTIP_VARIABLES_DECLARE='Declara e inicializa una variable';
Blockly.HTE_TOOLTIP_MATH_MAX='Devuelve el número mayor';
Blockly.HTE_TOOLTIP_MATH_MIN='Devuelve el número más pequeño';
Blockly.HTE_TOOLTIP_MATH_MAP='Asigna un número de un primer intérvalo a un numero de un segundo intérvalo.';
Blockly.HTE_TOOLTIP_TEXT_JOIN='Crea un texto mediante la unión de dos trozos de texto.';
Blockly.HTE_TOOLTIP_TEXT_TOTEXT = 'Convierte un numero en un string.';
Blockly.HTE_TOOLTIP_TEXT_TOCHAR = 'Devuelve el carácter correspondiente a un código ASCII.';
Blockly.HTE_TOOLTIP_TEXT_TOASCII =' Devuelve el código ASCII correspondiente a un carácter.';
Blockly.HTE_TOOLTIP_TEXT_TOINT='Convierte un valor tipo string en un valor tipo integer.';
Blockly.HTE_TOOLTIP_TEXT_TOFLOAT='Convierte un valor tio string en un valor tipo float.';
Blockly.HTE_TOOLTIP_LISTS_CREATE_WITH_TEXT = "Crea una lista de un texto.";
Blockly.HTE_TOOLTIP_LOGIT_TRUEORFALSE='Si el primer número es cierto, se devuelve el segundo número, de lo contrario el tercer número.';
Blockly.HTE_TOOLTIP_BLOCKGROUP_SERIAL_AVAILABLE='Si el puerto serie está disponible, se devuelve true, en caso contrario devuelve false.';
Blockly.HTE_TOOLTIP_BLOCKGROUP_SERIAL_READ_STR='devuelve un valor tipo string en el puerto serie.';
Blockly.HTE_TOOLTIP_BLOCKGROUP_SERIAL_READ_INT='devuelve un valor tipo integer en el puerto serie.';
Blockly.HTE_TOOLTIP_BLOCKGROUP_SERIAL_READ_FLOAT='Devuelve un valor tipo float en el puerto serie.';
Blockly.HTE_TOOLTIP_BLOCKGROUP_CHAOSHENGBO='Devuelve la distancia medida del sensor ultrasónico.';
Blockly.HTE_TOOLTIP_BLOCKGROUP_GET_TEM='Devuelve la temperatura medida en el sensor DHT11.';
Blockly.HTE_TOOLTIP_BLOCKGROUP_GET_HUM = 'Devuelve la humedad medida del sensor DHT11.';
Blockly.HTE_TOOLTIP_BLOCKGROUP_SERVO_MOVE = 'Se mueve entre 0 ~ 180 grados.';
Blockly.HTE_TOOLTIP_BLOCKGROUP_SERVO_READ = 'Devuelve los grados girados en el último movimiento de u servo.';
Blockly.HTE_TOOLTIP_BLOCKGROUP_TONE = 'Reproduce sonido con la frecuencia especificada.';
Blockly.HTE_TOOLTIP_BLOCKGROUP_TONE2 = 'Reproduce sonido en función de la frecuencia y la duración especificada.';
Blockly.HTE_TOOLTIP_BLOCKGROUP_NOTONE = 'Detiene el sonido.';
//untranslated
Blockly.LUXE_LED='LED #';
Blockly.LUXE_MOTOR='Motor #';
Blockly.LUXE_STAT='Stat';
Blockly.LUXE_SPEED='Speed';
Blockly.LUXE_DIR='Direction';
Blockly.LUXE_LED_ON='ON';
Blockly.LUXE_LED_OFF='OFF';
Blockly.LUXE_MOTOR_FORWARD='Clockwise';
Blockly.LUXE_MOTOR_REVERSE='Counterclockwise';
Blockly.LUXE_LED_CHANGE='change';
Blockly.LUXE_MOTOR_CHANGE='changeDirection';
Blockly.LUXE_MOTOR_STOP='stop';
Blockly.LUXE_SPEAKER_PLAYSOUND='Play sound';
Blockly.LUXE_SPEANER_NOSOUND='No sound';
Blockly.LUXE_SPEAKER_FREQUENCY='frequency';
Blockly.LUXE_SPEAKER_DURATION='duration';

//-----------------NOVA---------------------------------
Blockly.HTE_NOVA_PORT = 'Port';
Blockly.HTE_NOVA_STAT = 'Set';
Blockly.HTE_NOVA_GET_STAT = 'Get';

// LED
Blockly.HTE_NOVA_LED = 'LED';
Blockly.HTE_NOVA_LED_ON = 'ON';
Blockly.HTE_NOVA_LED_OFF = 'OFF';

// Button
Blockly.HTE_NOVA_BUTTON_PRESSED = 'Pressed';
Blockly.HTE_NOVA_BUTTON_RELEASED = 'Released';
Blockly.HTE_NOVA_BTN = 'Button ';
Blockly.HTE_NOVA_ABCD = '#';

Blockly.HTE_NOVA_TILTSWITCH = 'Tilt Switch';
Blockly.HTE_NOVA_SOUND = 'Sound'; 
Blockly.HTE_NOVA_LIMISWICTH = 'Limit Switch'; 
Blockly.HTE_NOVA_LIGHT = 'Light'; 

Blockly.HTE_NOVA_BUZZER = 'Buzzer'; 
Blockly.HTE_NOVA_FREQUENCY = 'Frequency(Hz)'; 
Blockly.HTE_NOVA_HTE_DURATION = 'Duration(ms)'; 

Blockly.HTE_NOVA_MOTOR = 'DC Motor'; 
Blockly.HTE_NOVA_MOTOR_SPEED = 'Speed(-100~100)%'; 

Blockly.HTE_NOVA_ULTRASONIC = 'Ultrasonic(cm)'; 

Blockly.HTE_NOVA_DHT11 = 'DHT11';
Blockly.HTE_NOVA_TYPE = 'Type';
Blockly.HTE_NOVA_DHT11_H = 'GetHumidity';
Blockly.HTE_NOVA_DHT11_T = 'GetTemperature';

Blockly.HTE_NOVA_SERVO = 'Servo';
Blockly.HTE_NOVA_DEGREE_0_180 = 'Degree（0~180）';
Blockly.HTE_NOVA_DELAY = 'Delay';
Blockly.HTE_NOVA_DELAY_MS = 'ms';

Blockly.HTE_NOVA_LINEFINDER = 'LineFinder';
Blockly.HTE_NOVA_L = 'LeftState';
Blockly.HTE_NOVA_R = 'RightState';
Blockly.HTE_NOVA_READ = 'GetLineState';

Blockly.HTE_NOVA_4DIGITDISPLAY = 'Digitdisplay';
Blockly.HTE_NOVA_NUMBER = 'Number';
Blockly.HTE_NOVA_DISPLAY_HOUR= 'Display Hour';
Blockly.HTE_NOVA_DISPLAY_MIN = 'Display Minute';

Blockly.HTE_NOVA_RTC = 'Real Time Clock';
Blockly.HTE_NOVA_RTC_SEC = 'Sec';
Blockly.HTE_NOVA_RTC_MIN = 'Min';
Blockly.HTE_NOVA_RTC_HOUR = 'Hour';
Blockly.HTE_NOVA_RTC_WEEK = 'Week';
Blockly.HTE_NOVA_RTC_DAY = 'Day';
Blockly.HTE_NOVA_RTC_MON = 'Mon';
Blockly.HTE_NOVA_RTC_YEAR = 'Year';

Blockly.HTE_NOVA_IR_REC = 'Infrared Receiver';

Blockly.HTE_NOVA_BLUETOOTH = 'Bluetooth';
Blockly.HTE_NOVA_BLUETOOTH_AVAILABLE = 'Available？';
Blockly.HTE_NOVA_BLUETOOTH_READ_STR = 'ReadString';
Blockly.HTE_NOVA_BLUETOOTH_READ_NUM = 'ReadNumber';

//spi
Blockly.TO_SPI_SLAVE_PIN='To SPI Slave PIN#';
Blockly.SPI_TRANSFER='transfer';

Blockly.HTE_SERIAL_BEGIN='velocidad en baudios';

//stepper
Blockly.HTE_STEPPER='Stepper';
Blockly.HTE_STEPPER_SETUP_STEPPER='Setup Stepper';
Blockly.HTE_STEPPER_PIN1='PIN1#';
Blockly.HTE_STEPPER_PIN2='PIN2#';
Blockly.HTE_STEPPER_PIN3='PIN3#';
Blockly.HTE_STEPPER_PIN4='PIN4#';
Blockly.HTE_STEPSPERREVOLUTION='steps per revolution';
Blockly.HTE_STEPPER_SET_SPEED='setSpeed';
Blockly.HTE_STEPPER_STEP='step';

//-----------------Ethernet------------------------------------
Blockly.HTE_ETHERNET_BEGIN='Begin (DHCP)';
Blockly.HTE_ETHERNET='Ethernet';
Blockly.HTE_ETHERNET2='Ethernet2';
Blockly.HTE_ETHERNET_MAC_ADDRESS='Mac Address';
Blockly.HTE_ETHERNET_LOCALIP='localIP';
Blockly.HTE_ETHERNET_CLINET_CONNECT_SERVER='Clinet.Connect Host';
Blockly.HTE_ETHERNET_CLINET_PORT='Port';
Blockly.HTE_ETHERNET_CLINET_STOP='Client.stop';
Blockly.HTE_ETHERNET_CLINET_CONNECTED='Client.connected';
Blockly.HTE_ETHERNET_CLINET_AVAILABLE='Client.available';
Blockly.HTE_ETHERNET_CLINET_PRINT='Client.print';
Blockly.HTE_ETHERNET_CLINET_PRINTLN='Client.println';
Blockly.HTE_ETHERNET_CLINET_READ='Client.read';
Blockly.HTE_ETHERNET_CLINET_GET_REQUEST='GET Request';
Blockly.HTE_ETHERNET_CLINET_URL='URL';
Blockly.HTE_ETHERNET_CLINET_SERVER='Host';

//DS18B20温度传感器
Blockly.HTE_DS18B20='DS18B20 PIN#';
Blockly.HTE_DS18B20_GET_TEMP='getTemperature';
Blockly.HTE_DS18B20_C='°C';
Blockly.HTE_DS18B20_F='°F';

//GPS
Blockly.HTE_GPS_INIT='GPS init';
Blockly.HTE_GPS_DATA_AVAILABLE='GPS data is available';
Blockly.HTE_GPS_DATA_ENCODE='GPS encode data successful';
Blockly.HTE_GPS_LOCATION='location';
Blockly.HTE_GPS_DATE='date';
Blockly.HTE_GPS_TIME='time';
Blockly.HTE_GPS_ISVALID='isValid';
Blockly.HTE_GPS_GET='GPS get';
Blockly.HTE_GPS_LOCATION_LAT='location-latitude';
Blockly.HTE_GPS_LOCATION_LNG='location-longitude';
Blockly.HTE_GPS_DATE_YEAR='date-year';
Blockly.HTE_GPS_DATE_MONTH='date-month';
Blockly.HTE_GPS_DATE_DAY='date-day';
Blockly.HTE_GPS_TIME_HOUR='time-hour';
Blockly.HTE_GPS_TIME_MINUTE='time-minute';
Blockly.HTE_GPS_TIME_SECOND='time-second';
Blockly.HTE_GPS_TIME_CENTISECOND='time-centisecond';

//factory
Blockly.HTE_PARAMS = 'parameters';

//MsTimer2
Blockly.HTE_MSTIMER2_EVERY='every';
Blockly.HTE_MSTIMER2_DO='do';
Blockly.HTE_MSTIMER2_START='start';
Blockly.HTE_MSTIMER2_STOP='stop';
//interrupts
Blockly.HTE_CONTROL_INTERRUPTS = 'interrupciones';
Blockly.HTE_CONTROL_NOINTERRUPTS = 'no interrupciones';
//others
Blockly.HTE_WARNING_NOT_DECLARE='This variable is not declared!';
Blockly.HTE_LENGTH = "longitud de";
Blockly.HTE_EQUALS="equals";
Blockly.HTE_STARTSWITH="startsWith";
Blockly.HTE_ENDSWITH="endsWith";
Blockly.HTE_COMPARETO="compareTo";
Blockly.Msg.UNDO = "Deshacer";
Blockly.Msg.REDO = "Rehacer";
Blockly.HTE_CONTROL_END_PROGRAM = "fin del programa";

//oled
Blockly.Msg.texttodisplay = "texts to display:";
Blockly.Msg.OLEDDISPLAY = "display";
Blockly.Msg.todisplay = "to display:";
Blockly.Msg.rawx = "raw x(127 max)";
Blockly.Msg.liney = "line y(63 max)";
Blockly.Msg.line1 = "line1=";
Blockly.Msg.line2 = "line2=";
Blockly.Msg.line3 = "line3=";
Blockly.Msg.line4 = "line4=";
Blockly.Msg.num1 = "Number 1(at end)=";
Blockly.Msg.num2 = "Number 2(at end)=";
Blockly.Msg.num3 = "Number 3(at end)=";
Blockly.Msg.num4 = "Number 4(at end)=";
// RGB
Blockly.HTE_RGB = 'RGB Luz';
Blockly.HTE_RGB_NUM = 'Luz Número';
Blockly.HTE_RGB_COUNT = 'Luz Conde';
Blockly.HTE_RGB_R = 'R Valor';
Blockly.HTE_RGB_G = 'G Valor';
Blockly.HTE_RGB_B = 'B Valor';

//四位数码管
Blockly.HTE_4DIGITDISPLAY = 'Digital Mostrar';
Blockly.HTE_4DIGITDISPLAY_DISPLAYSTRING = 'Mostrar la cadena';
Blockly.HTE_4DIGITDISPLAY_NOMBER1 = 'No.';
Blockly.HTE_4DIGITDISPLAY_NOMBER2 = '';
Blockly.HTE_4DIGITDISPLAY_DOT = 'Dot';
Blockly.HTE_4DIGITDISPLAY_ON = 'En';
Blockly.HTE_4DIGITDISPLAY_OFF = 'Off';

//TM1637
Blockly.HTE_4DIGITDISPLAY_TM1637 = 'TM1637';
Blockly.HTE_4DIGITDISPLAY_TM1637_DISPLAYSTRING = 'tm1637 Show (pergamino) cadena';
Blockly.HTE_4DIGITDISPLAY_TM1637_DISPLAYSTRING_TIP = '';
Blockly.HTE_4DIGITDISPLAY_TM1637_TIP = '';
Blockly.HTE_4DIGITDISPLAY_TM1637_DISPLAYTIME = 'TM1637 Show';
Blockly.HTE_4DIGITDISPLAY_TM1637_DISPLAYTIME_TOOLTIP = '';
Blockly.HTE_4DIGITDISPLAY_TM1637_INIT = 'TM1637 Init';
Blockly.HTE_4DIGITDISPLAY_STOPWATCH = 'Cronometro';
Blockly.HTE_4DIGITDISPLAY_TM1637_STOPWATCH_TOOLTIP = '';
Blockly.HTE_4DIGITDISPLAY_STOPWATCH_START = 'Inicio';
Blockly.HTE_4DIGITDISPLAY_STOPWATCH_PAUSE = 'Pausa';
Blockly.HTE_4DIGITDISPLAY_STOPWATCH_RESET = 'Reset';
Blockly.HTE_4DIGITDISPLAY_TM1637_BRIGHTNESS = 'TM1637 Brillo';
Blockly.HTE_4DIGITDISPLAY_4DIGITDISPLAY_BRIGHTNESS_TOOLTIP = '';

Blockly.HTE_YEAR = 'Y';
Blockly.HTE_MONTH = 'M';
Blockly.HTE_DAY = 'D';
Blockly.HTE_HOUR = 'H';
Blockly.HTE_MINUTE = 'M';
Blockly.HTE_SECOND = 'S';

Blockly.HTE_DS1302_INITPIN = 'INIT DS1302 PIN'
Blockly.HTE_SETDATE = 'SetDate:';
Blockly.HTE_DATEFORMATE = 'DateFormat(Y-M-D)'
Blockly.HTE_TIMEFORMATE = 'TimeFormat(H:M:S)'
//////////// microbit js ///////////////////
Blockly.HTE_MICROBIT_JS_IS_GESTURE='Is gesture ';
Blockly.HTE_MICROBIT_JS_SERIAL_WHEN_CONTAIN_DATA='When Serial recevied data containing ';
Blockly.HTE_MICROBIT_JS_SERIAL_READ_LINE='Serial read one line';
Blockly.HTE_MICROBIT_JS_RANDOM_BOOLEAN='Random true or false';
Blockly.HTE_MICROBIT_JS_PERIOD='set period(us)';
Blockly.HTE_MICROBIT_JS_LAST_PULSE_PERIOD='get the period(us) of the last pulse';
Blockly.HTE_MICROBIT_JS_INTERRUPT_BTN='attachInterrupt button#';
Blockly.HTE_MICROBIT_JS_PULSE_STATUS='pulse mode';
Blockly.HTE_MICROBIT_JS_RADIO_SEND_NUMBER='radio send number';
Blockly.HTE_MICROBIT_JS_RADIO_SEND_VALUE='radio send value';
Blockly.HTE_MICROBIT_JS_RADIO_SEND_STRING='radio send string';
Blockly.HTE_MICROBIT_JS_RADIO_ON_RECEIVE='on radio received';
Blockly.HTE_MICROBIT_JS_RADIO_SET_GROUP='radio set group';
Blockly.HTE_MICROBIT_JS_RADIO_SET_TRANSMIT_POWER='radio set transmit power';
Blockly.HTE_MICROBIT_JS_RADIO_SET_TRANSMIT_SERIAL_NUMBER='radio set transmit serial number';
Blockly.HTE_MICROBIT_JS_RADIO_WRITE_RECEIVE_PACKET_TO_SERIAL='radio write received packet to serial';
Blockly.HTE_MICROBIT_JS_CREATE_SPRITE='create sprite at x:';
Blockly.HTE_MICROBIT_JS_Y='y:';
Blockly.HTE_MICROBIT_JS_MOVE_BY='move by';
Blockly.HTE_MICROBIT_JS_DELETE_VAR='delete';
Blockly.HTE_MICROBIT_JS_TURN='turn';
Blockly.HTE_MICROBIT_JS_BY_ANGLE='by (ANGLE)';
Blockly.HTE_MICROBIT_JS_NUMBER='by';
Blockly.HTE_MICROBIT_JS_CHANGE='change';
Blockly.HTE_MICROBIT_JS_TOUCH='touch';
Blockly.HTE_MICROBIT_JS_TOUCH_EDGE='touch edge?';
Blockly.HTE_MICROBIT_JS_CHANGE_SCORE='change score by';
Blockly.HTE_MICROBIT_JS_SET_SCORE='set score';
Blockly.HTE_MICROBIT_JS_ON_EDGE_BOUNCE='if on edge, bounce'
Blockly.HTE_MICROBIT_JS_START_COUNTDOWN='start countdown(ms)';
Blockly.HTE_MICROBIT_JS_SCORE='game score';
Blockly.HTE_MICROBIT_JS_GAME_OVER='game over';
Blockly.HTE_MICROBIT_JS_GAME_RESUME='game resume';
Blockly.HTE_MICROBIT_JS_GAME_PAUSE='game pause';
Blockly.HTE_MICROBIT_JS_ACCELERATION='acceleration (mg)';
Blockly.HTE_MICROBIT_JS_SET_ACCELERATION='set acceleration range';
Blockly.HTE_MICROBIT_JS_LIGHT_LEVEL='light level';
Blockly.HTE_MICROBIT_JS_CALIBRATE_COMPASS='calibrate compass';
Blockly.HTE_MICROBIT_JS_COMPASS_HEADING='compass heading(angle)';
Blockly.HTE_MICROBIT_JS_ROTATION='rotation(angle)';
Blockly.HTE_MICROBIT_JS_MAGETIC_FORCE='magnetic force(uT)';
Blockly.HTE_MICROBIT_JS_BEAT='beats';
Blockly.HTE_MICROBIT_JS_RING_TONE='ring tone (Hz)';
Blockly.HTE_MICROBIT_JS_REST_TONE='rest(ms)';
Blockly.HTE_MICROBIT_JS_START_MELODY='start melody';
Blockly.HTE_MICROBIT_JS_MUSIC_EVENT='music on';
Blockly.HTE_MICROBIT_JS_GET_TEMPO='tempo (bpm)';
Blockly.HTE_MICROBIT_JS_CHANGE_TEMPO='change tempo by (bpm)';
Blockly.HTE_MICROBIT_JS_SET_TEMPO='set tempo to (bpm)';
Blockly.HTE_MICROBIT_JS_I2C_READ_ADDRESS='i2c read number at address';
Blockly.HTE_MICROBIT_JS_I2C_FORMAT='of format';
Blockly.HTE_MICROBIT_JS_I2C_WRITE_ADDRESS='i2c write number at address';
Blockly.HTE_MICROBIT_JS_I2C_VALUE='of value';
Blockly.HTE_MICROBIT_JS_SPI_WRITE="spi write";
Blockly.HTE_MICROBIT_JS_SPI_FREQUENCY="spi frequency";
Blockly.HTE_MICROBIT_JS_SPI_FORMAT="spi format";
Blockly.HTE_MICROBIT_JS_SPI_SET_PINS="spi set pins";
Blockly.HTE_MICROBIT_JS_BLE_SERVICE='bluetooth service';
Blockly.HTE_MICROBIT_JS_BLE_ON_CONNECTED='on bluetooth connected';
Blockly.HTE_MICROBIT_JS_BLE_ON_DISCONNECTED='on bluetooth disconnected';
Blockly.HTE_MICROBIT_JS_BLE_ON_RECEIVE='bluetooth on data received';
Blockly.HTE_MICROBIT_JS_BLE_CONNECTED='connectable';
Blockly.HTE_MICROBIT_JS_BLE_NAMESPACE='namespace(bytes 6-9)';
Blockly.HTE_MICROBIT_JS_BLE_INSTANCE='instance(bytes 2-6)';
Blockly.HTE_MICROBIT_JS_BLE_POWER='power';
Blockly.HTE_MICROBIT_JS_BLE_URL='url'
Blockly.HTE_MICROBIT_JS_BLE_WRITE_NUMBER='bluetooth uart write number';
Blockly.HTE_MICROBIT_JS_BLE_WRITE_STRING='bluetooth uart write string';
Blockly.HTE_MICROBIT_JS_BLE_WRITE_VALUE='bluetooth uart write value';
Blockly.HTE_MICROBIT_JS_BLE_UART_SERVICE='bluetooth uart service';
Blockly.HTE_MICROBIT_JS_BLE_STOP_ADVERTISING='bluetooth stop advertising';
Blockly.HTE_MICROBIT_JS_BLE_SET_POWER='bluetooth set transmit power';
Blockly.HTE_MICROBIT_JS_BLE_READ_UNTIL='bluetooth uart read until';
Blockly.HTE_MICROBIT_JS_BLE_URL_CONNECTED='bluetooth advertise url. connectable';
Blockly.HTE_MICROBIT_JS_BLE_UID_CONNECTED='bluetooth advertise UID. connectable';
Blockly.HTE_MICROBIT_JS_SYSTEM_RUN_BACKGROUND='run in background';
Blockly.HTE_MICROBIT_JS_SYSTEM_RESET='reset';
Blockly.HTE_MICROBIT_JS_SYSTEM_WAIT='wait (us)';
Blockly.HTE_MICROBIT_JS_SYSTEM_RAISE_SOURCE='raise event from source';
Blockly.HTE_MICROBIT_JS_SYSTEM_RAISE_VALUE='with value';
Blockly.HTE_MICROBIT_JS_SYSTEM_ON_SOURCE='on event from source';
Blockly.HTE_MICROBIT_JS_SYSTEM_TIMESTAMP='event timestamp';
Blockly.HTE_MICROBIT_JS_SYSTEM_VALUE='event value';
Blockly.HTE_MICROBIT_JS_SYSTEM_DEVICE_NAME='device name';
Blockly.HTE_MICROBIT_JS_SYSTEM_DEVICE_SERIAL_NUMBER='device serial number';
Blockly.HTE_MICROBIT_JS_MONITOR_SHOW_NUMBER='show number';
Blockly.HTE_MICROBIT_JS_MONITOR_SHOW_STRING='show string';
Blockly.HTE_MICROBIT_JS_MONITOR_SHOW_LEDS='show leds';
Blockly.HTE_MICROBIT_JS_MONITOR_SHOW_ARROW='show arrow';
Blockly.HTE_MICROBIT_JS_MONITOR_CLEAR_SCREEN='clear screen';
Blockly.HTE_MICROBIT_JS_MONITOR_PLOT_POINT_X='plot x';
Blockly.HTE_MICROBIT_JS_MONITOR_PLOT_POINT_Y='y';
Blockly.HTE_MICROBIT_JS_MONITOR_UNPLOT_POINT_X='unplot x';
Blockly.HTE_MICROBIT_JS_MONITOR_TOGGLE_POINT_X='toggle x';
Blockly.HTE_MICROBIT_JS_MONITOR_GET_POINT_X='point x';
Blockly.HTE_MICROBIT_JS_MONITOR_PLOT_BAR_START='plot bar graph of';
Blockly.HTE_MICROBIT_JS_MONITOR_PLOT_BAR_END='up to';
Blockly.HTE_MICROBIT_JS_MONITOR_BRIGHTNESS='brightness';
Blockly.HTE_MICROBIT_JS_MONITOR_SET_BRIGHTNESS='set brightness';
Blockly.HTE_MICROBIT_JS_MONITOR_STOP_ANIMATION='stop animation';
Blockly.HTE_MICROBIT_JS_MONITOR_LED_ENABLE='led enable';
Blockly.HTE_MICROBIT_JS_MONITOR_SHOW_IMAGE='show image';
Blockly.HTE_MICROBIT_JS_MONITOR_AT_OFFSET='at offset';
Blockly.HTE_MICROBIT_JS_MONITOR_CREATE_IMAGE='create image';
Blockly.HTE_MICROBIT_JS_MONITOR_SCROLL_IMAGE='scroll image';
Blockly.HTE_MICROBIT_JS_MONITOR_WITH_OFFSET='with offset';
Blockly.HTE_MICROBIT_JS_MONITOR_SCROLL_INTERVAL='and interval(ms)';
Blockly.HTE_MICROBIT_JS_MONITOR_CREATE_BIG_IMAGE='create big image';
Blockly.HTE_MICROBIT_JS_MONITOR_ARROW_IMAGE='arrow image';
Blockly.HTE_MICROBIT_JS_TYPE_NUMBER='number';
Blockly.HTE_MICROBIT_JS_TYPE_STRING='string';
Blockly.HTE_MICROBIT_JS_TYPE_BOOLEAN='boolean';
Blockly.HTE_MICROBIT_JS_TYPE_ARRAY_NUMBER='Array<number>';
Blockly.HTE_MICROBIT_JS_TYPE_ARRAY_STRING='Array<string>';
Blockly.HTE_MICROBIT_JS_LIST_ADD_VALUE='add value';
Blockly.HTE_MICROBIT_JS_LIST_TO_END='to end';
Blockly.HTE_MICROBIT_JS_LIST_GET_AND_REMOVE_LAST='get and remove last value from ';
Blockly.HTE_MICROBIT_JS_LIST_INSERT_AT='insert at';
Blockly.HTE_MICROBIT_JS_LIST_VALUE='value';
Blockly.HTE_MICROBIT_JS_LIST_REVERSE='reverse';
Blockly.HTE_MICROBIT_JS_LIST_GET_AND_REMOVE_FIRST='get and remove first value from';
Blockly.HTE_MICROBIT_JS_LIST_INSERT='insert';
Blockly.HTE_MICROBIT_JS_LIST_AT_BEGINNING='at beginning';
Blockly.HTE_MICROBIT_JS_LIST_FIND_INDEX_OF='find index of';
Blockly.HTE_MICROBIT_JS_LIST_REMOVE_VALUE_AT='remove value at';
Blockly.HTE_MICROBIT_JS_LIST_REMOVE_VALUE_XIANG='';

Blockly.HTE_MICROBIT_JS_INOUT_ANALOG_PITCH = 'analog pitch ';
Blockly.HTE_MICROBIT_JS_INOUT_FREQUENCY ='for (ms)';
Blockly.Msg.INOUT_ANALOGPITCH  = "analog pitch for some time";
Blockly.HTE_MICROBIT_JS_INOUT_SETPIN  = "set pin#";
Blockly.HTE_MICROBIT_JS_INOUT_EMITEVENTS  = "to emit";
Blockly.HTE_MICROBIT_JS_INOUT_EVENT_EDGE = "edge";
Blockly.HTE_MICROBIT_JS_INOUT_EVENT_PULSE = "pulse";
Blockly.HTE_MICROBIT_JS_INOUT_EVENT_TOUCH = "touch";
Blockly.HTE_MICROBIT_JS_INOUT_EVENT_NONE = "none";
Blockly.HTE_MICROBIT_JS_INOUT_SETPULL  = "to";
Blockly.Msg.INOUT_SETEVENT  = "configure the emit event by the pin";
Blockly.HTE_MICROBIT_JS_INOUT_PULL_UP = "pull";
Blockly.HTE_MICROBIT_JS_INOUT_PULL_DOWN = "down";
Blockly.HTE_MICROBIT_JS_INOUT_PULL_NONE = "none";
Blockly.Msg.INOUT_SETPULL  = "configure the pull of the pin";
Blockly.HTE_MICROBIT_JS_INOUT_SET_PITCH_PIN  = "analog set pitch pin#";
Blockly.Msg.INOUT_SET_PITCH_PIN  = "set the analog pitch pin";
Blockly.HTE_MICROBIT_shake='shake';
Blockly.HTE_MICROBIT_up='up';
Blockly.HTE_MICROBIT_down='down';
Blockly.HTE_MICROBIT_left='left';
Blockly.HTE_MICROBIT_right='right';
Blockly.HTE_MICROBIT_face_up='face up';
Blockly.HTE_MICROBIT_face_down='face down';
Blockly.HTE_MICROBIT_freefall='freefall';
